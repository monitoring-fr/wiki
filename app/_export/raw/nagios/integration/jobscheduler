====== Intégrer Job Scheduler à Nagios ======

Ce tutoriel a été réalisé par :

^ **Rôle**                          ^ **Nom**          ^
| **Rédacteur**                    | Romuald FRONTEAU |

Comme j'aime bien le schéma explicatif de l'implémentation de Job Scheduler et Nagios, le voilà. Il est bien sûr pris sur le site de Job Scheduler.

{{ :nagios:jobscheduler-nagios.jpg?800 }}

Reste à tester la chose comme expliqué sur le site de Job Scheduler.

===== Pré-requis =====

Job Scheduler doit être installé, pour cela vous pouvez vous rendre à la page ci-dessous :

**[[:infra:jobscheduler]]**

La liste des pré-requis est assez courte mais au combien importante. Tout d'abord il vous faut impérativement trois fichiers:
  * {{http://www.sos-berlin.com/download/scheduler/lib/sos.stacks.jar |sos.stack.jar}} qui est en fait une archive contenant la définition de tâche que Nagios peut superviser.
  * {{http://www.sos-berlin.com/download/scheduler/sources/sos/stacks/nagios/check_scheduler.pl.html|check_scheduler.pl}} est le plugin Nagios vous permettant de superviser job scheduler
  * {{http://www.sos-berlin.com/download/scheduler/config/scheduler_monitor.xml | check_monitor.xml}} est la définition d'une tâche que nous utiliserons pour notre premier cas.


Il est important de noter que check_scheduler.pl requiert Perl dans sa version 5.8 minimum, ainsi que des paquets Perl comme Net::HTTP et XML::XPath (disponible sur {{ http://www.cpan.org }} )

===== Configuration =====

La configuration de cette supervision se déroule en deux temps bien distinct. Dans un premier temps nous allons configurer Job Scheduler pour qu'il puisse être superviser, puis votre serveur Nagios pour qu'il supervise ce que demandé.

==== Configuration de Job Scheduler ====

Dans un premier temps, il s'agit de télécharger l'archive contenant les différents job utilisé pour Nagios, ainsi que le {{http://www.sos-berlin.com/download/scheduler/config/scheduler_monitor.xml |check_monitor.xml}}

Une fois ces fichiers en votre possession veuillez lire votre fichier factory.ini:
<code>
LCPXP-407:~/scheduler/config$ sudo vi factory.ini
</code>
Rechercher la chaine CLASS_PATH:
<code>
[java]
class_path              = /usr/local/scheduler/lib/*.jar

;   
</code>
Il ne vous reste plus qu'à copier le fichier sos.stack.jar dans le répertoire signifié par la variable CLASS_PATH.

La deuxième chose à faire est de copier le fichier check_monitor.xml. Veuillez placer le fichier que vous venez de télécharger dans /usr/local/scheduler/config .
Une fois ces étapes effectuer, relancer Job Scheduler.

==== Configuration de Nagios ====

Rappelons que vous devez avoir en votre possession le fichier check_schedule.pl et que les modules perl NET::HTTP et XML::XPATH doivent être installé sur votre machine client (serveur Job Schedule).

Le principe de configuration reste aussi simple que pour Job Schedule, à ceci près qu'une petite modification du plugin est peut être à effectuer.
Une fois copier dans votre répertoire /libexec de votre serveur de supervision Nagios, procédez à une petite lecture du fichier:
<code>
nagios@Nagios:/usr/local/nagios/libexec$ vi check_scheduler.pl 
</code>
A la première ligne, en entête d'exécution du fichier perl, vous pouvez lire:
<code>
#! /opt/perl-5.8.6/bin/perl -w
</code>
Pour vérifier que ce chemin est bien le bon, veuillez faire un petit "which perl" dans votre invite de commande. le chemin qui vous sera révélé sera celui à mettre à la place.
<code>
#! /usr/bin/perl
</code>

Maintenant, il ne nous reste plus qu'à ajouter notre hôte Job Schedule dans Nagios et de définir le service de supervision associé.